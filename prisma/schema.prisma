// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String
  password  String
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  orders           Order[]
  sentMessages     Message[] @relation("SentMessages")
  receivedMessages Message[] @relation("ReceivedMessages")
  cart             Cart?
  addresses        Address[]
  paymentMethods   PaymentMethod[]
}

model Address {
  id          String   @id @default(cuid())
  title       String   // "Ev", "İş", "Diğer" gibi
  firstName   String
  lastName    String
  company     String?
  phone       String
  address     String
  city        String
  state       String
  zipCode     String
  country     String   @default("Türkiye")
  isDefault   Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String
}

model PaymentMethod {
  id          String      @id @default(cuid())
  type        PaymentType
  title       String      // "Ana Kart", "İş Kartı" gibi
  cardNumber  String?     // Son 4 hane
  cardHolder  String?
  expiryDate  String?
  isDefault   Boolean     @default(false)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  // Relations
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String
}

model Category {
  id          String   @id @default(cuid())
  name        String   @unique
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  products Product[]
}

model Product {
  id          String   @id @default(cuid())
  name        String   @unique
  description String?
  price       Float
  imageUrl    String?
  stock       Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  category   Category    @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  categoryId String
  orderItems OrderItem[]
  cartItems  CartItem[]
}

model Order {
  id        String      @id @default(cuid())
  status    OrderStatus @default(PENDING)
  total     Float
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt

  // Relations
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String
  items  OrderItem[]
}

model OrderItem {
  id       String @id @default(cuid())
  quantity Int
  price    Float

  // Relations
  order     Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  orderId   String
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId String
}

model Cart {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  user  User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String   @unique
  items CartItem[]
}

model CartItem {
  id        String   @id @default(cuid())
  quantity  Int      @default(1)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  cart      Cart    @relation(fields: [cartId], references: [id], onDelete: Cascade)
  cartId    String
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId String

  @@unique([cartId, productId])
}

model Message {
  id        String   @id @default(cuid())
  subject   String
  content   String
  isRead    Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  sender     User   @relation("SentMessages", fields: [senderId], references: [id], onDelete: Cascade)
  senderId   String
  receiver   User   @relation("ReceivedMessages", fields: [receiverId], references: [id], onDelete: Cascade)
  receiverId String
}

model AboutPage {
  id             String   @id @default(cuid())
  title          String   @default("Hakkımızda")
  heroTitle      String   @default("Livkors - Kalite ve Şıklığın Buluştuğu Yer")
  heroSubtitle   String   @default("2015 yılından beri kaliteli çanta üretiminde öncü firma")
  storyTitle     String   @default("Hikayemiz")
  storyContent   String   @default("Livkors, 2015 yılında kaliteli çanta üretimi amacıyla kurulmuştur...")
  visionTitle    String   @default("Vizyonumuz")
  visionContent  String   @default("Çanta sektöründe kalite ve tasarım standardlarını belirlemeyi hedefliyoruz...")
  missionTitle   String   @default("Misyonumuz")
  missionContent String   @default("Müşterilerimize en kaliteli ürünleri sunarak yaşam kalitelerini artırmak...")
  phone          String   @default("+90 212 555 0123")
  email          String   @default("info@livkors.com")
  address        String   @default("İstanbul, Türkiye")
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model SiteSettings {
  id              String   @id @default(cuid())
  siteName        String   @default("Livkors")
  siteDescription String   @default("Kaliteli çantalar ve mükemmel müşteri hizmetinde öncü markayız")
  logoUrl         String?
  heroTitle       String   @default("Özel Tasarım Çantalar")
  heroSubtitle    String   @default("Her tarza uygun kaliteli çantalar. Kadın, erkek ve özel koleksiyonlar.")
  footerText      String   @default("Kaliteli çantalar ve mükemmel müşteri hizmetinde öncü markayız.")
  socialFacebook  String?
  socialInstagram String?
  socialTwitter   String?
  socialLinkedin  String?
  metaTitle       String   @default("Livkors - Kaliteli Çantalar")
  metaDescription String   @default("En kaliteli çantalar, uygun fiyatlar ve hızlı teslimat")
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model HeroBanner {
  id          String   @id @default(cuid())
  title       String
  subtitle    String?
  description String?
  imageUrl    String
  buttonText  String?
  buttonLink  String?
  isActive    Boolean  @default(true)
  order       Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Newsletter {
  id        String   @id @default(cuid())
  email     String   @unique
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  USER
  ADMIN
}

enum OrderStatus {
  PENDING
  CONFIRMED
  SHIPPED
  DELIVERED
  CANCELLED
}

enum PaymentType {
  CREDIT_CARD
  DEBIT_CARD
  PAYPAL
  BANK_TRANSFER
}
